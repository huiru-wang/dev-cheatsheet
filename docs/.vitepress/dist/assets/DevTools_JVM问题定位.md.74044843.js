import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.fd95ed2e.js";const C=JSON.parse('{"title":"JVM定位常用方法","description":"","frontmatter":{},"headers":[],"relativePath":"DevTools/JVM问题定位.md","filePath":"DevTools/JVM问题定位.md"}'),p={name:"DevTools/JVM问题定位.md"},o=l(`<h1 id="jvm定位常用方法" tabindex="-1">JVM定位常用方法 <a class="header-anchor" href="#jvm定位常用方法" aria-label="Permalink to &quot;JVM定位常用方法&quot;">​</a></h1><h2 id="cpu占用高定位" tabindex="-1">CPU占用高定位 <a class="header-anchor" href="#cpu占用高定位" aria-label="Permalink to &quot;CPU占用高定位&quot;">​</a></h2><h3 id="_1-获取java进程id" tabindex="-1">1. 获取Java进程Id <a class="header-anchor" href="#_1-获取java进程id" aria-label="Permalink to &quot;1. 获取Java进程Id&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">top</span></span>
<span class="line"><span style="color:#B392F0;">jps</span></span>
<span class="line"><span style="color:#B392F0;">ps</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-ef</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">grep</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">java</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">top</span></span>
<span class="line"><span style="color:#6F42C1;">jps</span></span>
<span class="line"><span style="color:#6F42C1;">ps</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-ef</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">grep</span><span style="color:#24292E;"> </span><span style="color:#032F62;">java</span></span></code></pre></div><h3 id="_2-找到cpu占用高线程" tabindex="-1">2. 找到CPU占用高线程 <a class="header-anchor" href="#_2-找到cpu占用高线程" aria-label="Permalink to &quot;2. 找到CPU占用高线程&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">top</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-Hp</span><span style="color:#E1E4E8;"> [java-pid]</span></span>
<span class="line"><span style="color:#B392F0;">ps</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">H</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-eo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pid,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tid,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">%cpu</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">grep</span><span style="color:#E1E4E8;"> [java-pid]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">top</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-Hp</span><span style="color:#24292E;"> [java-pid]</span></span>
<span class="line"><span style="color:#6F42C1;">ps</span><span style="color:#24292E;"> </span><span style="color:#032F62;">H</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-eo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pid,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tid,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">%cpu</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">grep</span><span style="color:#24292E;"> [java-pid]</span></span></code></pre></div><h3 id="_3-获取指定线程堆栈" tabindex="-1">3. 获取指定线程堆栈 <a class="header-anchor" href="#_3-获取指定线程堆栈" aria-label="Permalink to &quot;3. 获取指定线程堆栈&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">jstack</span><span style="color:#E1E4E8;"> [tid]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">jstack</span><span style="color:#24292E;"> [tid]</span></span></code></pre></div><h2 id="查看堆区活跃大对象" tabindex="-1">查看堆区活跃大对象 <a class="header-anchor" href="#查看堆区活跃大对象" aria-label="Permalink to &quot;查看堆区活跃大对象&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">jmap</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-histo:live</span><span style="color:#E1E4E8;"> [PID] </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">head</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">9</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">num</span><span style="color:#E1E4E8;">     </span><span style="color:#6A737D;">#instances         #bytes  class name (module)</span></span>
<span class="line"><span style="color:#B392F0;">-------------------------------------------------------</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">1:</span><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">73320</span><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">9959344</span><span style="color:#E1E4E8;">  [B (java.base@17.0.7)</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">2:</span><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">262144</span><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">6291456</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">org.apache.logging.log4j.core.async.AsyncLoggerConfigDisruptor</span><span style="color:#E1E4E8;">$Log4jEventWrapper</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">3:</span><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">6053</span><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">1941968</span><span style="color:#E1E4E8;">  [I (java.base@17.0.7)</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">4:</span><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">20427</span><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">1797576</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">java.lang.reflect.Method</span><span style="color:#E1E4E8;"> (java.base@17.0.7)</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">5:</span><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">11869</span><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">1697688</span><span style="color:#E1E4E8;">  [Ljava.lang.Object; (</span><span style="color:#B392F0;">java.base@17.0.7</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">6:</span><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">69745</span><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">1673880</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">java.lang.String</span><span style="color:#E1E4E8;"> (java.base@17.0.7)</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">7:</span><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">47961</span><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">1534752</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">java.util.concurrent.ConcurrentHashMap</span><span style="color:#E1E4E8;">$Node (java.base@17.0.7)</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">8:</span><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">11475</span><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">1359392</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">java.lang.Class</span><span style="color:#E1E4E8;"> (java.base@17.0.7)</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">9:</span><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">7078</span><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">587760</span><span style="color:#E1E4E8;">  [Ljava.util.HashMap$Node; (</span><span style="color:#B392F0;">java.base@17.0.7</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">jmap</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-histo:live</span><span style="color:#24292E;"> [PID] </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">head</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">9</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">num</span><span style="color:#24292E;">     </span><span style="color:#6A737D;">#instances         #bytes  class name (module)</span></span>
<span class="line"><span style="color:#6F42C1;">-------------------------------------------------------</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">1:</span><span style="color:#24292E;">         </span><span style="color:#005CC5;">73320</span><span style="color:#24292E;">        </span><span style="color:#005CC5;">9959344</span><span style="color:#24292E;">  [B (java.base@17.0.7)</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">2:</span><span style="color:#24292E;">        </span><span style="color:#005CC5;">262144</span><span style="color:#24292E;">        </span><span style="color:#005CC5;">6291456</span><span style="color:#24292E;">  </span><span style="color:#032F62;">org.apache.logging.log4j.core.async.AsyncLoggerConfigDisruptor</span><span style="color:#24292E;">$Log4jEventWrapper</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">3:</span><span style="color:#24292E;">          </span><span style="color:#005CC5;">6053</span><span style="color:#24292E;">        </span><span style="color:#005CC5;">1941968</span><span style="color:#24292E;">  [I (java.base@17.0.7)</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">4:</span><span style="color:#24292E;">         </span><span style="color:#005CC5;">20427</span><span style="color:#24292E;">        </span><span style="color:#005CC5;">1797576</span><span style="color:#24292E;">  </span><span style="color:#032F62;">java.lang.reflect.Method</span><span style="color:#24292E;"> (java.base@17.0.7)</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">5:</span><span style="color:#24292E;">         </span><span style="color:#005CC5;">11869</span><span style="color:#24292E;">        </span><span style="color:#005CC5;">1697688</span><span style="color:#24292E;">  [Ljava.lang.Object; (</span><span style="color:#6F42C1;">java.base@17.0.7</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">6:</span><span style="color:#24292E;">         </span><span style="color:#005CC5;">69745</span><span style="color:#24292E;">        </span><span style="color:#005CC5;">1673880</span><span style="color:#24292E;">  </span><span style="color:#032F62;">java.lang.String</span><span style="color:#24292E;"> (java.base@17.0.7)</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">7:</span><span style="color:#24292E;">         </span><span style="color:#005CC5;">47961</span><span style="color:#24292E;">        </span><span style="color:#005CC5;">1534752</span><span style="color:#24292E;">  </span><span style="color:#032F62;">java.util.concurrent.ConcurrentHashMap</span><span style="color:#24292E;">$Node (java.base@17.0.7)</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">8:</span><span style="color:#24292E;">         </span><span style="color:#005CC5;">11475</span><span style="color:#24292E;">        </span><span style="color:#005CC5;">1359392</span><span style="color:#24292E;">  </span><span style="color:#032F62;">java.lang.Class</span><span style="color:#24292E;"> (java.base@17.0.7)</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">9:</span><span style="color:#24292E;">          </span><span style="color:#005CC5;">7078</span><span style="color:#24292E;">         </span><span style="color:#005CC5;">587760</span><span style="color:#24292E;">  [Ljava.util.HashMap$Node; (</span><span style="color:#6F42C1;">java.base@17.0.7</span><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="通过dump分析内存" tabindex="-1">通过dump分析内存 <a class="header-anchor" href="#通过dump分析内存" aria-label="Permalink to &quot;通过dump分析内存&quot;">​</a></h2><h3 id="生成dump文件" tabindex="-1">生成dump文件 <a class="header-anchor" href="#生成dump文件" aria-label="Permalink to &quot;生成dump文件&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">jmap</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-dump:format=b,file=[filename]</span><span style="color:#E1E4E8;"> [PID]</span></span>
<span class="line"><span style="color:#B392F0;">jmap</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-dump:live,format=b,file=[filename]</span><span style="color:#E1E4E8;"> [PID]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">-------------------------------------------------------</span></span>
<span class="line"><span style="color:#B392F0;">Dumping</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">heap</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/data/live.hprof</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">...</span></span>
<span class="line"><span style="color:#B392F0;">Heap</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dump</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">created</span><span style="color:#E1E4E8;"> [62829011 </span><span style="color:#9ECBFF;">bytes</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.268</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">secs]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">jmap</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-dump:format=b,file=[filename]</span><span style="color:#24292E;"> [PID]</span></span>
<span class="line"><span style="color:#6F42C1;">jmap</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-dump:live,format=b,file=[filename]</span><span style="color:#24292E;"> [PID]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">-------------------------------------------------------</span></span>
<span class="line"><span style="color:#6F42C1;">Dumping</span><span style="color:#24292E;"> </span><span style="color:#032F62;">heap</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/data/live.hprof</span><span style="color:#24292E;"> </span><span style="color:#032F62;">...</span></span>
<span class="line"><span style="color:#6F42C1;">Heap</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dump</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file</span><span style="color:#24292E;"> </span><span style="color:#032F62;">created</span><span style="color:#24292E;"> [62829011 </span><span style="color:#032F62;">bytes</span><span style="color:#24292E;"> </span><span style="color:#032F62;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.268</span><span style="color:#24292E;"> </span><span style="color:#032F62;">secs]</span></span></code></pre></div><ul><li><code>live</code>：只dump存活对象；</li><li><code>filename</code>：dump文件名，一般为：<code>xxx.hprof</code></li><li><code>PID</code>：Java进程Id；</li></ul><h3 id="分析堆内存" tabindex="-1">分析堆内存 <a class="header-anchor" href="#分析堆内存" aria-label="Permalink to &quot;分析堆内存&quot;">​</a></h3><p>有多种dump分析工具：jvisualvm、eclipse memory analyzer等；</p><h2 id="动态修改jvm参数" tabindex="-1">动态修改JVM参数 <a class="header-anchor" href="#动态修改jvm参数" aria-label="Permalink to &quot;动态修改JVM参数&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">jinfo</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-flag</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+PrintGCDetails</span><span style="color:#E1E4E8;"> [PID]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">jinfo</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-flag</span><span style="color:#24292E;"> </span><span style="color:#032F62;">+PrintGCDetails</span><span style="color:#24292E;"> [PID]</span></span></code></pre></div>`,18),e=[o];function c(t,r,E,y,i,F){return a(),n("div",null,e)}const h=s(p,[["render",c]]);export{C as __pageData,h as default};
